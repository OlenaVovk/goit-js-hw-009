{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,KACLH,EACFF,EAAS,C,SAACH,E,MAAUC,IAEpBG,EAAQ,C,SAACJ,E,MAAUC,GAAO,GAE3BA,EAAM,G,CAIFQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAMC,iBACN,MAAOC,UAAWb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IAAYL,EAAMM,cAEjD,IAAIC,EAAOC,SAASL,EAAMM,OAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,SAASH,EAAOI,OAAQC,IAAK,CACtC,IAANA,EACFH,EAAOC,SAASL,EAAMM,OAErBF,GAAcC,SAASJ,EAAKK,OAGbtB,EAAcuB,EAAGH,GAEhCI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAEnBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAqB1B,QAAeC,MAAU,IAErE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAEpBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,oBAAoB5B,QAAeC,MAAU,G,CAGzEW,EAAMM,cAAcW,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve ({position, delay});\n        } else {\n          reject ({position, delay});\n        }\n      }, delay);\n  })\n } \n  \nconst form = document.querySelector('form');\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit (event) {\n  event.preventDefault();\n  const {elements: {delay, step, amount }} = event.currentTarget;\n  //console.log(delay.value, step.value, amount.value);\n  let time = parseInt(delay.value);\n  for (let i = 1; i <= parseInt(amount.value); i++) {\n    if (i === 1) {\n      time = parseInt(delay.value);\n    } else {\n       time = time + parseInt(step.value);\n    }\n    //console.log(time);\n    const myPromise = createPromise(i, time)\n    myPromise\n      .then(({ position, delay }) => {\n      //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n}\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","time","parseInt","value","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.0d10e5f1.js.map"}