{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,WACLH,EACFF,EAAS,CAACH,WAAUC,UAEpBG,EAAQ,CAACJ,WAAUC,S,GAEpBA,E,IAIIQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAMC,iBAIN,IAHA,IAA8DC,EAAnBF,EAAMG,cAA1CC,SAAWC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3BC,EAAOC,SAASJ,EAAMK,OACjBC,EAAI,EAAGA,GAAKF,SAASF,EAAOG,OAAQC,IAAK,CACtC,IAANA,EACFH,EAAOC,SAASJ,EAAMK,OAErBF,GAAcC,SAASH,EAAKI,OAGbvB,EAAcwB,EAAGH,GAEhCI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAEnByB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEjE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAEpByB,EAAA7B,GAAS8B,OAAOI,QAAQ,oBAAmCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGrEW,EAAMG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve ({position, delay});\n        } else {\n          reject ({position, delay});\n        }\n      }, delay);\n  })\n } \n  \nconst form = document.querySelector('form');\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit (event) {\n  event.preventDefault();\n  const {elements: {delay, step, amount }} = event.currentTarget;\n  //console.log(delay.value, step.value, amount.value);\n  let time = parseInt(delay.value);\n  for (let i = 1; i <= parseInt(amount.value); i++) {\n    if (i === 1) {\n      time = parseInt(delay.value);\n    } else {\n       time = time + parseInt(step.value);\n    }\n    //console.log(time);\n    const myPromise = createPromise(i, time)\n    myPromise\n      .then(({ position, delay }) => {\n      //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","time","parseInt","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.3fe3972c.js.map"}